[{"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\index.js":"1","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\App.js":"2","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentLogin\\StudentLogin.js":"3","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\StudentDashboard.js":"4","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentSignup\\StudentSignup.js":"5","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminLogin\\AdminLogin.js":"6","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\AdminDashboard.js":"7","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\HomeComponent\\Home.js":"8","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\ResultComponent\\Result.js":"9","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\ExamComponent\\Exam.js":"10","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\Subject\\Subject.js":"11","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\TestComponent\\Test.js":"12","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\Dashboard\\Dashboard.js":"13","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\QuestionComponent\\Question.js":"14","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ResultComponent\\Result.js":"15","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\SubjectComponent\\Subject.js":"16","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\StudentList\\Student\\Student.js":"17","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\DetailComponent\\Details.js":"18","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\StudentList\\StudentList.js":"19","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\Exam.js":"20","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\ViewQuestion\\ViewQuestion.js":"21","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\AddQuestion\\AddQuestion.js":"22","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\baseUrl.jsx":"23"},{"size":144,"mtime":1646056932000,"results":"24","hashOfConfig":"25"},{"size":1307,"mtime":1646056874000,"results":"26","hashOfConfig":"25"},{"size":2270,"mtime":1693241146912,"results":"27","hashOfConfig":"25"},{"size":2242,"mtime":1693152272878,"results":"28","hashOfConfig":"25"},{"size":3447,"mtime":1693240095900,"results":"29","hashOfConfig":"25"},{"size":2307,"mtime":1693241628923,"results":"30","hashOfConfig":"25"},{"size":4337,"mtime":1693131737310,"results":"31","hashOfConfig":"25"},{"size":1402,"mtime":1693164003866,"results":"32","hashOfConfig":"25"},{"size":2405,"mtime":1646056920000,"results":"33","hashOfConfig":"25"},{"size":2031,"mtime":1693151483067,"results":"34","hashOfConfig":"25"},{"size":1638,"mtime":1646056924000,"results":"35","hashOfConfig":"25"},{"size":5832,"mtime":1693249169029,"results":"36","hashOfConfig":"25"},{"size":2717,"mtime":1693122168376,"results":"37","hashOfConfig":"25"},{"size":2587,"mtime":1693139629169,"results":"38","hashOfConfig":"25"},{"size":3574,"mtime":1692893252905,"results":"39","hashOfConfig":"25"},{"size":5003,"mtime":1693287363662,"results":"40","hashOfConfig":"25"},{"size":3506,"mtime":1693111386132,"results":"41","hashOfConfig":"25"},{"size":3278,"mtime":1646056888000,"results":"42","hashOfConfig":"25"},{"size":2108,"mtime":1693110457836,"results":"43","hashOfConfig":"25"},{"size":7837,"mtime":1693139856300,"results":"44","hashOfConfig":"25"},{"size":8122,"mtime":1646056890000,"results":"45","hashOfConfig":"25"},{"size":3828,"mtime":1693122159871,"results":"46","hashOfConfig":"25"},{"size":71,"mtime":1646056910000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"4uv2dz",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\index.js",[],["99","100"],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\App.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentLogin\\StudentLogin.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\StudentDashboard.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentSignup\\StudentSignup.js",["101"],"\r\n\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport style from \"./StudentSignup.module.css\";\r\n\r\nimport baseUrl from \"../../baseUrl\";\r\n\r\n\r\nfunction StudentSignup() {\r\n\r\n    const [userData, setUserData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    function onTextFieldChange(e) {\r\n        setUserData({\r\n            ...userData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function handlePassword(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n\r\n    let history = useHistory();\r\n\r\n    async function handleSignup() {\r\n        // var uname = userData.name;\r\n        var uemail = userData.email;\r\n        var upassword = userData.password;\r\n\r\n        var regxEmail = /^([a-zA-Z0-9\\._]+)@(([a-z])+)\\.([a-z]+)?$/\r\n        var regxPass=  /^[A-Za-z]\\w{7,14}$/;\r\n\r\n        if (regxEmail.test(uemail)) {\r\n\r\n            if(regxPass.test(upassword)){\r\n\r\n                if (userData.password === password) {\r\n                    await axios.post(`${baseUrl}/user`, userData);\r\n                    alert(\"Your account has created\");\r\n                    // alert(\"Please Login\");\r\n                    history.push(\"/StudentLogin\");\r\n                }\r\n\r\n                else alert(\"password did not match\");\r\n\r\n            }\r\n            else{\r\n                swal(\"Please enter a valid Password\", \"Enter Password Of 5-15 Length With Combination Of Number & Character\", \"error\");\r\n            }\r\n        } else swal(\"Please enter a valid Email\", \"Ex: abc123@gmail.com\", \"error\");\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id={style.container}>\r\n\r\n            <div id={style.formHeading}>\r\n                <h1>Student Signup</h1>\r\n                <p>Please complete the form below to register with us</p>\r\n            </div>\r\n\r\n            <div id={style.nameBox}>\r\n                <label htmlFor=\"name\">Name\r\n                    <input onChange={(e) => onTextFieldChange(e)}\r\n                        type=\"text\" name=\"name\" required />\r\n                </label>\r\n            </div>\r\n\r\n\r\n            <div id={style.emailBox}>\r\n                <label htmlFor=\"email\"> Email\r\n                    <input onChange={(e) => onTextFieldChange(e)}\r\n                        type=\"text\" name=\"email\" required />\r\n                </label>\r\n            </div>\r\n\r\n            <div id={style.passwordBox}>\r\n                <label htmlFor=\"password\"> Password\r\n                    <input onChange={(e) => onTextFieldChange(e)}\r\n                        type=\"password\" name=\"password\" required />\r\n                </label>\r\n            </div>\r\n\r\n\r\n            <div id={style.confirmPasswordBox}>\r\n                <label htmlFor=\"confirmPassword\">Confirm Password\r\n                    <input onChange={(e) => handlePassword(e)}\r\n                        type=\"password\" name=\"confirmPassword\" required />\r\n                </label>\r\n            </div>\r\n\r\n\r\n            {/* <button id={style.signup} onclick=\"signup()\">Sign Up</button> */}\r\n            <button id={style.signup} onClick={handleSignup} >Sign Up</button>\r\n\r\n\r\n            <div id={style.login}>\r\n                Have a Account?  <NavLink exact to=\"/StudentLogin\"> Log in</NavLink>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudentSignup;","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminLogin\\AdminLogin.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\AdminDashboard.js",["102"],"\r\n    \r\n    import style from \"./AdminDashboard.module.css\";\r\n\r\n    import {useHistory} from \"react-router-dom\";\r\n\r\n    import {NavLink , BrowserRouter , Switch , Route} from \"react-router-dom\";\r\n\r\n     import pic4 from \"../../../images/logo.jfif\";\r\n    \r\n    \r\n    import Dashboard from \"./Dashboard/Dashboard\";\r\n    import Subject from \"./SubjectComponent/Subject\";\r\n    import Exam from \"./ExamComponent/Exam\";\r\n    import Question from \"./QuestionComponent/Question\";\r\n    import Result from \"./ResultComponent/Result\";\r\n    import StudentList from \"./StudentList/StudentList\";\r\n    import Student from \"./StudentList/Student/Student\";\r\n\r\n    import Details from \"./ExamComponent/DetailComponent/Details\";\r\n    import ViewQuestion from \"./ExamComponent/ViewQuestion/ViewQuestion\";\r\n    import AddQuestion from \"./ExamComponent/AddQuestion/AddQuestion\";\r\n\r\n\r\n    \r\n    function AdminDashboard(){\r\n\r\n         let history = useHistory();\r\n\r\n         function goToAdminLogin(){\r\n              history.push(\"/AdminLogin\");\r\n         }\r\n\r\n\r\n        return (\r\n            <>\r\n            \r\n             <BrowserRouter>\r\n            \r\n                 <div id={style.header}>\r\n                \r\n            <div id={style.headerHeadingBox}>\r\n                <h3>Online Exam System</h3> \r\n            </div>\r\n\r\n             <div id={style.headerMenuBox}>\r\n                <NavLink exact to=\"/AdminDashboard\"> <span> Dashboard</span> </NavLink>\r\n                <a> <span onClick={goToAdminLogin}> Logout</span></a>\r\n             </div>\r\n        </div>\r\n\r\n                <div id={style.content}>\r\n\r\n                <div id={style.sideMenubar}>\r\n                         <div id={style.sideMenubarImageBox}>\r\n                           <img  id={style.imagelogo} src= {pic4} alt=\"\" />\r\n                         </div>\r\n                         {/* <div id={style.logobox}>\r\n                         <img src={pic4}/>\r\n\r\n                         </div> */}\r\n\r\n                         <div id={style.sideMenubarList}>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Subject\"> <button > <span>  Subject </span></button></NavLink>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Exam\"> <button > <span>  Exam </span></button></NavLink>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Question\"> <button > <span>  Question </span></button></NavLink>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/Result\"> <button > <span>  Result </span></button></NavLink>\r\n                            <NavLink exact className={style.removeUnderline} to=\"/AdminDashboard/StudentList\"> <button > <span>  StudentList </span></button></NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                    <div id={style.display}>\r\n                      \r\n              <Switch>\r\n                  <Route exact path=\"/AdminDashboard\" component={Dashboard}></Route>\r\n                  \r\n                  <Route exact path=\"/AdminDashboard/Subject\" component={Subject}></Route>\r\n                  <Route exact path=\"/AdminDashboard/Exam\" component={Exam}></Route>\r\n                  <Route exact path=\"/AdminDashboard/Question\" component={Question}></Route>\r\n                  <Route exact path=\"/AdminDashboard/Result\" component={Result}></Route>\r\n                  <Route exact path=\"/AdminDashboard/StudentList\" component={StudentList}></Route>\r\n\r\n\r\n                      <Route exact path=\"/AdminDashboard/Exam/Details/:id\" component={Details}></Route>\r\n                      <Route exact path=\"/AdminDashboard/Exam/ViewQuestion/:id\" \r\n                      component={ViewQuestion}></Route>\r\n                      <Route exact path=\"/AdminDashboard/Exam/AddQuestion/:id\" component={AddQuestion}></Route>\r\n\r\n                      <Route exact path=\"/AdminDashboard/StudentList/Details/:id\" component={Student}></Route>\r\n\r\n\r\n              </Switch>\r\n                    \r\n                    </div> \r\n\r\n                </div>\r\n\r\n\r\n                          \r\n                </BrowserRouter>\r\n\r\n              \r\n               \r\n\r\n              \r\n            </>\r\n        );\r\n    }\r\n\r\n    export default AdminDashboard;","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\HomeComponent\\Home.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\ResultComponent\\Result.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\ExamComponent\\Exam.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\Subject\\Subject.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\StudentComponent\\StudentDashboard\\TestComponent\\Test.js",["103","104","105"],"\r\n\r\nimport axios from \"axios\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\n\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\nimport baseUrl from \"../../../baseUrl\";\r\n\r\nfunction Test() {\r\n\r\n    let { id } = useParams();\r\n    let { category } = useParams();\r\n\r\n\r\n    const [allQuestions, setAllQuestions] = useState([]);\r\n\r\n    // =============================================================================================\r\n    const [tab_change, setTabChange] = useState(0);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange, false);\r\n\r\n\r\n        document.addEventListener('contextmenu', function (e) {\r\n            e.preventDefault();\r\n        }, false);\r\n\r\n        // =============================================================================================\r\n\r\n        async function getAllQuestions() {\r\n            let value = await axios.get(`${baseUrl}/exam/${id}/question`);\r\n            setAllQuestions(value.data);\r\n            \r\n        }\r\n        getAllQuestions();\r\n        return function cleanup() {\r\n            document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n            document.removeEventListener('contextmenu', function (e) {\r\n                e.preventDefault();\r\n            }, false);\r\n        }\r\n    }, [id, tab_change]);\r\n\r\n\r\n    const [answer, setAnswer] = useState({\r\n        answer1: \"\",\r\n        answer2: \"\",\r\n        answer3: \"\",\r\n        answer4: \"\",\r\n        answer5: \"\",\r\n    });\r\n\r\n\r\n    let correctAnswer = [];\r\n\r\n    function onRadioButtonChange(e) {\r\n        setAnswer({\r\n            ...answer,\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    }\r\n\r\n    let count = 0;\r\n\r\n    async function submitTest() {\r\n        for (let i = 0; i < allQuestions.length; i++) {\r\n            correctAnswer.push(allQuestions[i].answer);\r\n        }\r\n\r\n        let score = 0;\r\n        let status = \"\";\r\n\r\n\r\n        if (correctAnswer[0] === answer.answer1) score++;\r\n        if (correctAnswer[1] === answer.answer2) score++;\r\n        if (correctAnswer[2] === answer.answer3) score++;\r\n        if (correctAnswer[3] === answer.answer4) score++;\r\n        if (correctAnswer[4] === answer.answer5) score++;\r\n\r\n        // console.log(score);\r\n\r\n        if (score >= 3) status = \"Pass\";\r\n        else status = \"Fail\";\r\n\r\n\r\n        var date = new Date();\r\n        var d = date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\r\n        var t = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n        //    var abc =10;\r\n        let data = {\r\n            \"status\": status,\r\n            \"score\": score,\r\n            \"email\": { \"email\": sessionStorage.getItem(\"user\") },    // email\r\n            \"edate\": d + \" \" + t,\r\n            \"sname\": { \"name\": category },   // --  subject name\r\n            \"totalMarks\": \"5\",\r\n            \"examId\": { \"id\": id },         // exam id\r\n            \"totalQuestion\": \"5\",\r\n            \"mpcount\": tab_change\r\n        };\r\n\r\n        await axios.post(`${baseUrl}/result`, data);\r\n        history.push(\"/StudentDashboard/Result\");\r\n    }\r\n\r\n\r\n    function handleVisibilityChange() {\r\n        if (document.visibilityState == \"hidden\") {\r\n            // the page is hidden\r\n\r\n            setTabChange(tab_change + 1);\r\n\r\n\r\n\r\n            swal(\"Changed Tab Detected\", \"Action has been Recorded\", \"error\");\r\n\r\n\r\n        }\r\n\r\n        if (tab_change == 3) {\r\n\r\n\r\n            submitTest();\r\n\r\n        }\r\n        else {\r\n            // the page is visible\r\n\r\n        }\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <>\r\n      \r\n            \r\n            <div id={style.displayBoxQuestionHeadingBox}>\r\n                <h1>Answer all the questions</h1>\r\n            </div>\r\n            {\r\n\r\n                allQuestions.map((data, i) => {\r\n                    count++;\r\n                    return (\r\n                        <div id={style.displayBoxQuestionBox} key={i}>\r\n                            <div id={style.divQuestion}> <span>{data.qname}</span> </div>\r\n\r\n                            <div>\r\n                                <input onChange={(e) => onRadioButtonChange(e)} value={data.optionOne}\r\n                                    id={style.option1} name={\"answer\" + count} type=\"radio\" />\r\n                                <label htmlFor=\"option1\">{data.optionOne}</label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input onChange={(e) => onRadioButtonChange(e)} value={data.optionTwo}\r\n                                    id={style.option2} name={\"answer\" + count} type=\"radio\" />\r\n                                <label htmlFor=\"option2\">{data.optionTwo}</label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input onChange={(e) => onRadioButtonChange(e)} value={data.optionThree}\r\n                                    id={style.option3} name={\"answer\" + count} type=\"radio\" />\r\n                                <label htmlFor=\"option3\">{data.optionThree}</label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input onChange={(e) => onRadioButtonChange(e)} value={data.optionFour}\r\n                                    id={style.option4} name={\"answer\" + count} type=\"radio\" />\r\n                                <label htmlFor=\"option4\">{data.optionFour}</label>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n\r\n                })\r\n            }\r\n         \r\n            <div id={style.submitExam}><button onClick={submitTest}>Submit Exam</button></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Test","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\Dashboard\\Dashboard.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\QuestionComponent\\Question.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ResultComponent\\Result.js",["106","107","108"]," \r\n   import axios from \"axios\";\r\n\r\n   import {useEffect , useState} from \"react\";\r\n\r\n   \r\n   import style from \"../SubjectComponent/Subject.module.css\"\r\n\r\n   import baseUrl from \"../../../baseUrl\";\r\n\r\n   import swal from 'sweetalert';\r\n   \r\n\r\n\r\n    function Result(){\r\n\r\n        const [tab_change, setTabChange] = useState(0);\r\n\r\n        const [results , setResults] = useState([]);\r\n\r\n        useEffect(()=>{\r\n\r\n        //    ==============================================================================\r\n            document.addEventListener(\"visibilitychange\", handleVisibilityChange, false);\r\n        //    ==============================================================================\r\n\r\n           async function getAllResults(){\r\n               let value = await axios.get(`${baseUrl}/result`);\r\n               setResults(value.data);\r\n               //console.log(value.data[0]);\r\n           }\r\n               getAllResults();\r\n        },[]);\r\n//    ==============================================================================\r\n        function handleVisibilityChange() {\r\n            if (!document.hidden) {\r\n                // the page is hidden\r\n                // setTabChange(tab_change+1);\r\n                // swal(\"Changed Tab Detected\", \"Action has been Recorded\", \"error\");\r\n                // document.visibilityState;\r\n                \r\n                \r\n            } else {\r\n              // the page is visible\r\n            }\r\n          }\r\n//    ==============================================================================\r\n        return (\r\n            <>\r\n               <div id={style.displayHeadingBox}> \r\n                   <h2>Exam List</h2>     \r\n                </div>\r\n\r\n                <div id={style.tableBox}>\r\n                    <table>\r\n                       <thead>\r\n                           <tr>\r\n                             <th id=\"center\">User Email</th>\r\n                             <th id=\"center\">Exam Name</th>\r\n                             <th id=\"center\">Exam Date</th>\r\n                             <th id=\"center\">Result Status</th>\r\n                             <th id=\"center\">Your Score</th>  \r\n                             <th id=\"center\">Total Marks</th>\r\n                             <th id=\"center\">Total Question</th>  \r\n                             <th id=\"center\">Tab Switch Count</th> \r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                results.map((data , i) => {\r\n                                    return(\r\n                                          <tr key={i}>\r\n                                              <td>{data.email.email}</td>\r\n                                              <td>{data.sname.name}</td>\r\n                                              <td>{data.edate}</td>\r\n                                              <td>{data.status}</td>\r\n                                              <td>{data.score}</td>\r\n                                              <td>{data.totalMarks}</td>\r\n                                              <td>{data.totalQuestion}</td>\r\n                                              <td>{data.mpcount}</td>\r\n\r\n                                          </tr>\r\n                                    );\r\n                                })\r\n                            }\r\n                               \r\n                        </tbody>\r\n                     </table>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    export default Result;","G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\SubjectComponent\\Subject.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\StudentList\\Student\\Student.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\DetailComponent\\Details.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\StudentList\\StudentList.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\Exam.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\ViewQuestion\\ViewQuestion.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\AdminComponent\\AdminDashboard\\ExamComponent\\AddQuestion\\AddQuestion.js",[],"G:\\CDAC\\Project\\CodeSpace\\Online_Exam_System_Frontend\\src\\Components\\baseUrl.jsx",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":45,"column":38,"nodeType":"115","messageId":"116","endLine":45,"endColumn":39,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":48,"column":17,"nodeType":"120","endLine":48,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":46,"column":8,"nodeType":"123","endLine":46,"endColumn":24,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":113,"column":38,"nodeType":"127","messageId":"128","endLine":113,"endColumn":40},{"ruleId":"125","severity":1,"message":"126","line":125,"column":24,"nodeType":"127","messageId":"128","endLine":125,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":11,"column":11,"nodeType":"131","messageId":"132","endLine":11,"endColumn":15},{"ruleId":"129","severity":1,"message":"133","line":17,"column":16,"nodeType":"131","messageId":"132","endLine":17,"endColumn":26},{"ruleId":"129","severity":1,"message":"134","line":17,"column":28,"nodeType":"131","messageId":"132","endLine":17,"endColumn":40},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["137","138"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleVisibilityChange'. Either include it or remove the dependency array.","ArrayExpression",["139"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'swal' is defined but never used.","Identifier","unusedVar","'tab_change' is assigned a value but never used.","'setTabChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"140","fix":"141","desc":"142"},{"messageId":"143","fix":"144","desc":"145"},{"desc":"146","fix":"147"},"removeEscape",{"range":"148","text":"149"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"150","text":"151"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [handleVisibilityChange, id, tab_change]",{"range":"152","text":"153"},[928,929],"",[928,928],"\\",[1421,1437],"[handleVisibilityChange, id, tab_change]"]